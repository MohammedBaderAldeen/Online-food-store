@model OrderListViewModel
@{
    ViewData["Title"] = "OrderPickup";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<form method="get">
    <br />
    <br />
    <h2 class="text-info">Order Ready for Pickup</h2>
    <br />

    <div class="whiteBackground border">
        <div class="container border border-secondary mb-3" style="height:60px;">
            <div class="row container">
                <div class="col-11">
                    <div class="row" style="padding-top:10px;">
                        <div class="col-4">
                            @Html.Editor("searchName", new { htmlAttributes = new { @class = "form-control", @placeholder = "Name..." } })
                        </div>
                        <div class="col-4">
                            @Html.Editor("searchPhone", new { htmlAttributes = new { @class = "form-control", @placeholder = "Phone..." } })
                        </div>
                        <div class="col-4">
                            @Html.Editor("searchEmail", new { htmlAttributes = new { @class = "form-control", @placeholder = "Email..." } })
                        </div>
                    </div>
                </div>
                <div class="col-1">
                    <div class="row" style="padding-top:10px;">
                        <button type="submit" value="Search" class="btn btn-primary form-control">
                            <i class="fa fa-search" aria-hidden="true"></i>
                        </button>
                    </div>
                </div>
            </div>
        </div>
        <div>
            @if (Model.Orders.Count == 0)
            {
                <p class="text-danger">No Order History ...</p>
            }
            else
            {
                <table class="table table-striped border">
                    <tr class="table-secondary">
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.id)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickUpName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.ApplictionUser.Email)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.PickUpTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(m => m.Orders[0].OrderHeader.OrderTotal)
                        </th>
                        <th>
                            Total Item
                        </th>
                        <th>

                        </th>

                    </tr>
                    @foreach (var item in Model.Orders)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.id)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.PickUpName)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.ApplictionUser.Email)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.PickUpTime)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderHeader.OrderTotal)
                            </td>
                            <td>
                                @Html.DisplayFor(m => item.OrderDetails.Count)
                            </td>
                            <td>
                                <button type="button" class="btn btn-success showDetails" data-id="@item.OrderHeader.id" data-toggle="modal">
                                    <i class="fa fa-list-alt" aria-hidden="true"></i> Details
                                </button>
                            </td>
                        </tr>
                    }

                </table>

                <div page-model="@Model.PagingInfo" page-classes-enable="true" page-class="btn border"
                     page-class-normal="btn btn-light" page-class-selected="btn btn-info active"
                     class="btn-group float-right"></div>
                <br />
            }
        </div>
    </div>
</form>

<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog-centered modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header bg-success text-light">
                <div class="col-10 offset-1">
                    <center><h5 class="modal-title">Order Details</h5></center>
                </div>
                <div class="col-1">
                    <button class="btn btn-outline-secondary float-right close" aria-label="Close" data-dismiss="modal">
                        &times;
                    </button>
                </div>
            </div>
            <div class="modal-body justify-content-center" id="myModalContent">

            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>
    var URL = '/Customer/Orders/GetOrderDetails';
    var urlOrderStatus = '/Customer/Orders/GetOrderStatus';
    $(function () {
        $(".showDetails").click(function () {
            $buttonClick = $(this);
            var id = $buttonClick.attr('data-id')

            $.ajax(
                {
                    type: "GET",
                    url: URL,
                    contentType: "application/json;charset=utf-8",
                    data: { "id": id },
                    cache: false,
                    dataType: "html",
                    success: function (data) {
                        $('#myModalContent').html(data);
                        $('#myModal').modal('show');
                    },
                    error: function () {
                        alert("Dynamic Content Load Faild")
                    }
                }
            );
        });
    });
    </script>
}

